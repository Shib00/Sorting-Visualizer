{"version":3,"sources":["helpers/randomNum.js","helpers/mergeSort.js","helpers/quickSort.js","helpers/bubbleSort.js","helpers/selectionSort.js","helpers/insertionSort.js","helpers/buttonToggler.js","helpers/disableButtons.js","helpers/enableButtons.js","helpers/sliderStyles.js","helpers/algoDesc.js","SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["randomNum","min","max","Math","ceil","floor","random","mergeSort","arr","animations","newArr","slice","callMergeSort","startIndex","endIndex","middleIndex","start","middle","end","resultArray","i","j","push","length","merge","quickSort","callQuickSort","pvtIdx","pivot","partition","bubbleSort","selectionSort","imin","insertionSort","val","temp","buttonToggler","id","speed","len","element","document","getElementById","setTimeout","disabled","clearTimeout","disableButtons","className","buttons","getElementsByClassName","enableButtons","height","width","focus","backgroundColor","outline","border","marginTop","SortingVisualizer","props","state","array","size","algo","genArr","bind","getDim","toggleSlider","handleChange","handleSpeedChange","n","this","toFixed","margin","setState","abs","arrayLines","color","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","barIdx","newHeight","barStyle","handleStyle","sliderStyles","trackStyle","class","onClick","defaultValue","onChange","desc","map","idx","key","Component","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7e673e7.chunk.js","sourcesContent":["//Generates a random number in a range (min and max included)\n\nfunction randomNum(min,max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; \n}\n\nexport {randomNum};","function mergeSort(arr){\n    let animations  = [];\n    let newArr = arr.slice();\n    callMergeSort(newArr, 0, newArr.length - 1, animations);\n    arr = newArr;\n    return {animations, arr};\n}\n\nfunction callMergeSort(newArr, startIndex, endIndex, animations) {\n    if(startIndex >= endIndex)\n        return;\n    const middleIndex = Math.floor((startIndex + endIndex)/2);\n    callMergeSort(newArr, startIndex, middleIndex, animations);\n    callMergeSort(newArr, middleIndex + 1, endIndex, animations);\n    merge(newArr, startIndex, middleIndex, endIndex, animations);\n}\n\nfunction merge(arr, start, middle, end, animations){\n    let resultArray = [];\n    let i=start, j=middle+1;\n    while(i<=middle && j<=end){\n        animations.push([i,j]);\n        animations.push([i,j]);\n        if(arr[i] < arr[j]){\n            animations.push([resultArray.length + start, arr[i]]);\n            resultArray.push(arr[i++]);\n        }else{\n            animations.push([resultArray.length + start, arr[j]]);\n            resultArray.push(arr[j++]);\n        }\n    }\n\n    //if length remains after above while\n    while(i<=middle) {\n        animations.push([i,i]);\n        animations.push([i,i]);\n        animations.push([resultArray.length + start, arr[i]]);\n        resultArray.push(arr[i++]);\n    }\n    while(j<=end) {\n        animations.push([j,j]);\n        animations.push([j,j]);\n        animations.push([resultArray.length + start, arr[j]]);\n        resultArray.push(arr[j++]);\n    }\n\n    //mapping resultArray to arr(original)\n    for (let i = start; i <= end; i++) {\n        arr[i] = resultArray[i - start];\n    }\n}\n\nexport default mergeSort;","function quickSort(arr){\n    let animations = [];\n    //.slice with no arguments makes a copy of that array\n    let newArr = arr.slice();\n    callQuickSort(newArr,0,newArr.length-1,animations);\n    arr = newArr;\n    return {arr,animations};\n}\n\nfunction callQuickSort(arr,start,end,animations){\n    if(start >= end) return;\n    let pvtIdx  = partition(arr,start,end,animations);\n    callQuickSort(arr,start,pvtIdx-1,animations);\n    callQuickSort(arr,pvtIdx+1,end,animations); \n}\n\nfunction partition(arr,start,end,animations){\n    let pivot = arr[end];\n    let pvtIdx = start;\n    for (let i=start;i<end;i++){\n        animations.push([\"comparison1\",i,end]);\n        animations.push([\"comparison2\",i,end]);\n        if(arr[i]<=pivot){\n            animations.push([\"swap\",i,arr[pvtIdx]]);\n            animations.push([\"swap\",pvtIdx,arr[i]]);\n            arr[i] = [arr[pvtIdx],arr[pvtIdx]=arr[i]][0];\n            pvtIdx++;\n        }\n    }\n    animations.push([\"swap\",pvtIdx,arr[end]]);\n    animations.push([\"swap\",end,arr[pvtIdx]]);\n    arr[pvtIdx]=[arr[end],arr[end]=arr[pvtIdx]][0];\n    return pvtIdx;\n}\n\nexport default quickSort;","function bubbleSort(arr){\n    let newArr = arr.slice();\n    let i,j; \n    let animations = [];\n    for(i=0;i<newArr.length;i++){\n        for(j=0;j<newArr.length-i-1;j++){\n            animations.push([j,j+1]);\n            animations.push([j,j+1]);\n            if(newArr[j]>newArr[j+1]){\n                animations.push([j,newArr[j+1]]);\n                animations.push([j+1,newArr[j]]);\n                newArr[j] = [newArr[j+1],newArr[j+1]=newArr[j]][0];\n            }\n            else{\n                animations.push([-1,-1]);\n                animations.push([-1,-1]);\n            }\n        }\n    }\n    return {newArr,animations};\n}\nexport default bubbleSort;","function selectionSort(arr){\n    let animations = [];\n    let newArr = arr.slice();\n    for(let i=0;i < newArr.length-1; i++){\n        let imin = i;\n        for(let j=i+1;j<newArr.length;j++){\n            animations.push(['comparison1',i,j]);\n            animations.push(['comparison2',i,j]);\n            if(newArr[j] < newArr[imin]){\n                imin = j;\n            }\n        }\n        animations.push([\"swap\",imin,newArr[i]]);\n        animations.push([\"swap\",i,newArr[imin]]);\n        newArr[i] = [newArr[imin],newArr[imin]=newArr[i]][0];\n    }\n    return {newArr,animations};\n}\n\nexport default selectionSort;","function insertionSort(arr){\n    let animations = [];\n    //making a copy coz when we change algo in state it causes rerender and \n    //in this the array passed in as argument is getting changed\n    let newArr = arr.slice();\n    for(let i=1; i<newArr.length; i++){\n        let val = newArr[i];\n        let temp = i;\n        animations.push([\"comparison1\",i,i]);\n        animations.push([\"comparison2\",i,i]);\n        while( temp>0 && val < newArr[temp-1]){\n            animations.push([\"swap\",temp,newArr[temp-1]]);\n            newArr[temp] = newArr[temp-1];\n            animations.push([\"comparison1\",temp,i]);\n            animations.push([\"comparison2\",temp,i]);\n            temp--;\n        }\n        animations.push([\"swap\",temp,val]);\n        newArr[temp] = val;\n    }\n    return {newArr,animations};\n}\n\nexport default insertionSort;","function buttonToggler(id,speed,len){\n    let element = document.getElementById(id);\n    setTimeout(()=>{\n        element.disabled = true;\n        \n    })\n    setTimeout(()=>{\n        document.getElementById(id).disabled = false;\n    },speed*len);\n    clearTimeout();\n}\n\nexport default buttonToggler;","function disableButtons(className){\n    let buttons = document.getElementsByClassName(className);\n    for(let i=0;i<buttons.length;i++){\n        buttons[i].disabled = true;\n    }\n}\n\nexport default disableButtons;","function enableButtons(className){\n    let buttons = document.getElementsByClassName(className);\n    for(let i=0;i<buttons.length;i++){\n        buttons[i].disabled = false;\n    }\n}\n\nexport default enableButtons;","export default {\n    handleStyle: [{\n        height: '20px',\n        width: '20px',\n        focus: 'none',\n        backgroundColor: 'teal',\n        outline: 'none',\n        border: '1px solid black',\n        // alignItems: 'center'\n        // transition: 'none'\n        }],\n    trackStyle: {\n        backgroundColor: 'rgba(0,128,128,0.7)',\n        marginTop: '1px'\n    } \n}\n\n\n// slider: {\n//     width: '240px',\n//     margin: '0 10px',\n//     display: 'inline-block',\n//     '& .rc-slider-track': {\n//         backgroundColor: 'transparent'\n//     },\n//     '& .rc-slider-rail': {\n//         height: '8px'\n//     },\n//     '& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus, .rc-slider-handle:hover': {\n//         backgroundColor: 'green',\n//         outline: 'none',\n//         border: '2px solid green',\n//         boxShadow: 'none',\n//         width: '13px',\n//         height: '13px',\n//         marginLeft: '-7px',\n//         marginTop: '-3px'\n//     }\n// },","export default {\n    'Selection': {\n        'best': '(n^2)',\n        'average': '(n^2)',\n        'worst': '(n^2)',\n    },\n    'Bubble': {\n        'best': '(n)',\n        'average': '(n^2)',\n        'worst': '(n^2)',\n    },\n    'Insertion': {\n        'best': '(n)',\n        'average': '(n^2)',\n        'worst': '(n^2)',\n    },\n    'Merge': {\n        'best': '(nlog(n))',\n        'average': '(nlog(n))',\n        'worst': '(nlog(n))',\n    },\n    'Quick': {\n        'best': '(nlog(n))',\n        'average': '(nlog(n))',\n        'worst': '(n^2)',\n    }\n}","import React,{Component} from 'react';\nimport Slider from 'rc-slider';\nimport {randomNum} from \"./helpers/randomNum\";\nimport mergeSort from \"./helpers/mergeSort\";\nimport quickSort from \"./helpers/quickSort\";\nimport bubbleSort from \"./helpers/bubbleSort\";\nimport selectionSort from \"./helpers/selectionSort\";\nimport insertionSort from \"./helpers/insertionSort\";\nimport buttonToggler from \"./helpers/buttonToggler\";\nimport disableButtons from \"./helpers/disableButtons\";\nimport enableButtons from \"./helpers/enableButtons\";\nimport sliderStyles from \"./helpers/sliderStyles\";\nimport desc from \"./helpers/algoDesc\";\nimport 'rc-slider/assets/index.css';\nimport \"./SortingVisualizer.css\";\n\nclass SortingVisualizer extends Component{\n    static defaultProps = {\n        min: 100,\n        max: 1000\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            array: [],\n            size: 40,\n            algo: '',\n            disabled: false,\n            speed: 1\n        }\n        this.genArr = this.genArr.bind(this);\n        this.getDim = this.getDim.bind(this);\n        this.toggleSlider = this.toggleSlider.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSpeedChange = this.handleSpeedChange.bind(this);\n        this.mergeSort = this.mergeSort.bind(this);\n        this.quickSort = this.quickSort.bind(this);\n        this.bubbleSort = this.bubbleSort.bind(this);\n        this.selectionSort = this.selectionSort.bind(this);\n        this.insertionSort = this.insertionSort.bind(this);\n    }\n\n\n// Get width and margin for arrayBars and also get the animation speed\ngetDim(){\n    let n = (this.state.size);\n    //toFixed(someNum) used to set floating point accuracy\n    let width = (100/(2*n-1)).toFixed(2);\n    let margin = (100/(4.5*n-1)).toFixed(2);\n    // console.log(width,margin);\n    return {width,margin}\n}\n\n// Generate an array \n    genArr(){\n        let arr = [];\n        let {min,max} = this.props;\n        let {size}    = this.state;\n\n        while(size--){\n            arr.push(randomNum(min,max));\n        }\n        this.setState({array: arr,algo:''});\n        enableButtons('sortBtn');\n    }\n\n//  Toggle Slider\n    toggleSlider(speed,len){\n        // let element = document.getElementById(id);\n        setTimeout(()=>{\n            this.setState({disabled: true});\n            \n        })\n        setTimeout(()=>{\n            this.setState({disabled: false});\n        },speed*len);\n        clearTimeout();\n    }\n\n    componentDidMount(){\n        this.genArr();\n    }\n\n    handleChange(val){\n        this.setState({size: val},()=>{\n            this.genArr();\n        }); \n    }\n\n    handleSpeedChange(val){\n        this.setState({speed: Math.abs(val-41)}); \n    }\n\n// Merge Sort\n    mergeSort(){\n        let {animations} = mergeSort(this.state.array);\n        buttonToggler('genArr',this.state.speed,animations.length);\n        this.toggleSlider(this.state.speed,animations.length);\n        disableButtons('sortBtn');\n        // console.log(animations);\n        this.setState({algo:'Merge'});\n        for(let i=0;i<animations.length;i++){\n            const arrayLines = document.getElementsByClassName('arrayLine');\n            const isColorChange = (i%3 !== 2);\n            if(isColorChange){\n                const color = (i%3 === 0) ? \"red\" : \"white\";\n                const [barOneIdx,barTwoIdx] = animations[i];\n                const barOneStyle = arrayLines[barOneIdx].style;\n                const barTwoStyle = arrayLines[barTwoIdx].style;\n                setTimeout(()=>{\n                                barOneStyle.backgroundColor = color;\n                                barTwoStyle.backgroundColor = color;\n                            }, i*this.state.speed);\n            }   \n            else {\n                setTimeout(()=>{\n                    const [barIdx, newHeight] = animations[i];\n                    const barStyle = arrayLines[barIdx].style;\n                    barStyle.height = `${newHeight/10}%`;\n                }, i*this.state.speed);\n            }\n        }   \n    }\n\n// Quick Sort\n    quickSort(){\n        let {animations} = quickSort(this.state.array);\n        buttonToggler('genArr',this.state.speed,animations.length);\n        this.toggleSlider(this.state.speed,animations.length);\n        disableButtons('sortBtn');\n        this.setState({algo:'Quick'});\n        // this.setState({array: arr});\n        // console.log(animations);\n        for(let i=0;i<animations.length;i++){\n            const arrayLines = document.getElementsByClassName('arrayLine');\n            const isColorChange = animations[i][0] !== \"swap\";\n            if(isColorChange){\n                const color = (animations[i][0] !== \"comparison1\") ? 'white':'red';\n                const [temp,barOneIdx,barTwoIdx] = animations[i];\n                const barOneStyle = arrayLines[barOneIdx].style;\n                const barTwoStyle = arrayLines[barTwoIdx].style;\n                setTimeout(()=>{\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i*this.state.speed);\n            }\n            else{\n                const [temp ,barIdx, newHeight] = animations[i];\n                const barStyle = arrayLines[barIdx].style;\n                setTimeout(()=>{\n                    barStyle.height = `${newHeight/10}%`;\n                }, i*this.state.speed);\n            }\n        }\n    }\n\n// Insertion Sort\n    insertionSort(){\n        let {animations} = insertionSort(this.state.array);\n        this.setState({algo:'Insertion'});\n        disableButtons('sortBtn');\n        buttonToggler('genArr',this.state.speed,animations.length);\n        this.toggleSlider(this.state.speed,animations.length);\n        // console.log(animations);\n        for(let i=0; i<animations.length; i++){\n            const arrayLines = document.getElementsByClassName('arrayLine');\n            const isColorChange = animations[i][0] !== \"swap\";\n            if(isColorChange){\n                const color = (animations[i][0] !== \"comparison1\") ? 'white':'red';\n                const [temp,barOneIdx,barTwoIdx] = animations[i];\n                const barOneStyle = arrayLines[barOneIdx].style;\n                const barTwoStyle = arrayLines[barTwoIdx].style;\n                setTimeout(()=>{\n                                barOneStyle.backgroundColor = color;\n                                barTwoStyle.backgroundColor = color;\n                            }, i*this.state.speed);\n            }\n            else{\n                const [temp ,barIdx, newHeight] = animations[i];\n                if (barIdx !== -1){\n                    const barStyle = arrayLines[barIdx].style;\n                    setTimeout(()=>{\n                        barStyle.height = `${newHeight/10}%`;\n                    }, i*this.state.speed);\n                }\n            }\n        }\n    }\n\n// Selection Sort\nselectionSort(){\n    let {animations} = selectionSort(this.state.array);\n    buttonToggler('genArr',this.state.speed,animations.length);\n    this.toggleSlider(this.state.speed,animations.length);\n    disableButtons('sortBtn');\n    // this.setState({array: arr});\n    this.setState({algo:'Selection'});\n    for(let i= 0 ;i < animations.length;i++){\n        const arrayLines = document.getElementsByClassName('arrayLine');\n        const isColorChange = animations[i][0] !== \"swap\";\n        if(isColorChange){\n            const color = (animations[i][0] !== \"comparison1\") ? 'white':'red';\n            const [temp,barOneIdx,barTwoIdx] = animations[i];\n            const barOneStyle = arrayLines[barOneIdx].style;\n            const barTwoStyle = arrayLines[barTwoIdx].style;\n            setTimeout(()=>{\n                            barOneStyle.backgroundColor = color;\n                            barTwoStyle.backgroundColor = color;\n                        }, i*this.state.speed);\n        }   \n        else {\n            const [temp ,barIdx, newHeight] = animations[i];\n            if (barIdx !== -1){\n                const barStyle = arrayLines[barIdx].style;\n                setTimeout(()=>{\n                    barStyle.height = `${newHeight/10}%`;\n                }, i*this.state.speed);\n            }\n        }\n    }\n}\n\n//BubbleSort\n    bubbleSort(){\n        let {animations} = bubbleSort(this.state.array);\n        buttonToggler('genArr',this.state.speed,animations.length);\n        this.toggleSlider(this.state.speed,animations.length);\n        disableButtons('sortBtn');\n        this.setState({algo:'Bubble'});\n\n        for(let i= 0 ;i < animations.length;i++){\n            const arrayLines = document.getElementsByClassName('arrayLine');\n            const isColorChange = (i%4 === 0) || (i%4 === 1);\n            if(isColorChange){\n                const color = (i%4===0) ? 'red':'white';\n                const [barOneIdx,barTwoIdx] = animations[i];\n                const barOneStyle = arrayLines[barOneIdx].style;\n                const barTwoStyle = arrayLines[barTwoIdx].style;\n                setTimeout(()=>{\n                                barOneStyle.backgroundColor = color;\n                                barTwoStyle.backgroundColor = color;\n                            }, i*this.state.speed);\n            }   \n            else {\n                const [barIdx, newHeight] = animations[i];\n                if (barIdx !== -1){\n                    const barStyle = arrayLines[barIdx].style;\n                    setTimeout(()=>{\n                        barStyle.height = `${newHeight/10}%`;\n                    }, i*this.state.speed);\n                }\n            }\n        }\n    }\n\n    render(){\n        // const {min, max} = this.props;\n        let {handleStyle,trackStyle} = sliderStyles;\n        const {array, size, algo} = this.state ;\n        return (\n            <div className=\"main\">\n                <div className=\"col1\">\n                    <div className=\"subcol1\">\n                        <div className=\"heading\">\n                            <h1><i class=\"icon braille\"/> Sorting Visualizer</h1>\n                        </div>\n                        <div className=\"buttons1\">\n                            <button class=\"sortBtn\" onClick={this.bubbleSort}>Bubble</button>\n                            <button class=\"sortBtn\" onClick={this.quickSort}>Quick</button>\n                            <button class=\"sortBtn\" onClick={this.mergeSort}>Merge</button>\n                            <button class=\"sortBtn\" onClick={this.selectionSort}>Selection</button>\n                            <button class=\"sortBtn\" onClick={this.insertionSort}>Insertion</button>\n                        </div>\n                        <div className=\"buttons2\">\n                            <button id='genArr' onClick={this.genArr}>Generate an array</button>\n                        </div>\n                        <div className=\"sliderContainer\">\n                            <h4>Size</h4>\n                            <Slider\n                                min = {10}\n                                max = {120}\n                                defaultValue={40}\n                                // step = {10}\n                                handleStyle={handleStyle}\n                                trackStyle={trackStyle}\n                                onChange={this.handleChange}\n                                disabled = {this.state.disabled} \n                            />\n                            <h4>Speed</h4>\n                            <Slider\n                                min = {1}\n                                max = {40}\n                                // step = {10}\n                                handleStyle={handleStyle}\n                                trackStyle={trackStyle}\n                                onChange={this.handleSpeedChange} \n                                disabled={this.state.disabled}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"subcol2\">\n                        {algo === '' ? <h2>Select an algorithm</h2> : \n                        <div style={{width: '100%',height:'90%'}}>\n                            <h2 style={{marginTop: '5%'}}>{algo} Sort</h2>\n                            <h4>Best - &Omega;{desc[algo]['best']}</h4>\n                            <h4>Average - &theta;{desc[algo]['average']}</h4>\n                            <h4>Worst - O{desc[algo]['worst']}</h4>\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"col2\">\n                        <div className=\"arrayContainer\">\n                            {array.map((val,idx)=>(\n                                    <div className='arrayLine' \n                                        key={idx}\n                                        style={{\n                                                height: `${val/10}%`,\n                                                width: `${this.getDim()['width']}%`,\n                                                margin: `0px ${this.getDim()['margin']}%`\n                                            }}>    \n                                    </div>\n                            ))}\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SortingVisualizer;\n","import React from 'react';\nimport SortingVisualizer from \"./SortingVisualizer\";\n\nfunction App() {\n  return (\n      <SortingVisualizer />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}